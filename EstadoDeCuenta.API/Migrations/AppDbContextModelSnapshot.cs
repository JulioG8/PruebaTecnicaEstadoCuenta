// <auto-generated />
using System;
using EstadoDeCuenta.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstadoDeCuenta.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstadoDeCuenta.API.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TarjetaCreditoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TarjetaCreditoId");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("EstadoDeCuenta.API.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TarjetaCreditoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TarjetaCreditoId");

                    b.ToTable("Pago", (string)null);
                });

            modelBuilder.Entity("EstadoDeCuenta.API.Models.TarjetaCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("LimiteCredito")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreTitular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaldoActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoDisponible")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TarjetaCredito", (string)null);
                });

            modelBuilder.Entity("EstadoDeCuenta.API.Models.Compra", b =>
                {
                    b.HasOne("EstadoDeCuenta.API.Models.TarjetaCredito", "TarjetaCredito")
                        .WithMany("Compras")
                        .HasForeignKey("TarjetaCreditoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TarjetaCredito");
                });

            modelBuilder.Entity("EstadoDeCuenta.API.Models.Pago", b =>
                {
                    b.HasOne("EstadoDeCuenta.API.Models.TarjetaCredito", "TarjetaCredito")
                        .WithMany("Pagos")
                        .HasForeignKey("TarjetaCreditoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TarjetaCredito");
                });

            modelBuilder.Entity("EstadoDeCuenta.API.Models.TarjetaCredito", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Pagos");
                });
#pragma warning restore 612, 618
        }
    }
}
